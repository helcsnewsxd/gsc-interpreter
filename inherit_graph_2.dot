digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="std::enable_shared\l_from_this",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node0 -> Node1 [id="edge1_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="Binary",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classBinary.html",tooltip="Class representing a binary expression."];
  Node0 -> Node3 [id="edge2_Node000000_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Grouping",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classGrouping.html",tooltip="Class representing a grouping expression."];
  Node0 -> Node4 [id="edge3_Node000000_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Literal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLiteral.html",tooltip="Class representing a literal expression."];
  Node0 -> Node5 [id="edge4_Node000000_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Unary",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classUnary.html",tooltip="Class representing a unary expression."];
  Node2 [id="Node000002",label="Expr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classExpr.html",tooltip="Abstract base class for expressions."];
  Node2 -> Node1 [id="edge5_Node000002_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node3 [id="edge6_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node4 [id="edge7_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node5 [id="edge8_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
