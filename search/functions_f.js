var searchData=
[
  ['term_0',['term',['../classParser.html#aa6dac16b11660cf177cd8b7bdf884847',1,'Parser']]],
  ['test_5fcase_1',['test_case',['../parserTest_8cpp.html#a10d080988786e16f4192485cb1c788dc',1,'TEST_CASE(&quot;Parse a term expression&quot;, &quot;[parser][expression][term]&quot;):&#160;parserTest.cpp'],['../tokenTest_8cpp.html#a8931d1058417a8e5061f1ea679242c70',1,'TEST_CASE(&quot;Token toString method&quot;, &quot;[token][toString]&quot;):&#160;tokenTest.cpp'],['../parserTest_8cpp.html#a7ced63c244d89a0287885227e6ca5879',1,'TEST_CASE(&quot;Parse a comparison expression&quot;, &quot;[parser][expression][comparison]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#a69a12a730a3a398fc4d0bd99420d05e7',1,'TEST_CASE(&quot;Parse equality expression&quot;, &quot;[parser][expression][equality]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#aaf508adce65f442ed0c970f650d6a12b',1,'TEST_CASE(&quot;Parsing statements (2 or more)&quot;, &quot;[parser][statement][multiple]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#ac6e05f98550a9d5d394db83d120e1fe7',1,'TEST_CASE(&quot;Parsing print statement&quot;, &quot;[parser][statement][print]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#a426c450a959f66acc7830754a58ac98e',1,'TEST_CASE(&quot;Parsing block statements&quot;, &quot;[oaser][statement][block]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#aed73810e8f8494e720796ca982d50ba9',1,'TEST_CASE(&quot;Parsing declaring statements&quot;, &quot;[parser][statement][declare]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#a8e68f877f941e96e628789e3b7c26e58',1,'TEST_CASE(&quot;Parsing logical operators&quot;, &quot;[parser][statement][logical]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#ad489a403c82e76e00b10b653d9e6442c',1,'TEST_CASE(&quot;Parsing an if statement&quot;, &quot;[parser][statement][if]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#ad841e92f8ac193583535a552ee996f73',1,'TEST_CASE(&quot;Parsing while statement&quot;, &quot;[parser][statement][while]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#ac20cff215516792cec7d9fe533c893b0',1,'TEST_CASE(&quot;Parsing and desugaring for statement&quot;, &quot;[parser][statement][for]&quot;):&#160;parserTest.cpp'],['../scannerTest_8cpp.html#ae5642181526f8e4900b00890b11e4ac1',1,'TEST_CASE(&quot;Scanner test for null program&quot;, &quot;[scanner][null_token]&quot;):&#160;scannerTest.cpp'],['../scannerTest_8cpp.html#a589f22582df1c77b146c9cfca9f63ea9',1,'TEST_CASE(&quot;Scanner test for single tokens&quot;, &quot;[scanner][single_token]&quot;):&#160;scannerTest.cpp'],['../scannerTest_8cpp.html#a98682d757443df50a081f56d56448546',1,'TEST_CASE(&quot;Scanner for identifier token&quot;, &quot;[scanner][literals]&quot;):&#160;scannerTest.cpp'],['../scannerTest_8cpp.html#a234e70dc7b9b2e1f12575f14a6eb4149',1,'TEST_CASE(&quot;Scacnner for keywords&quot;, &quot;[scanner][keywords]&quot;):&#160;scannerTest.cpp'],['../scannerTest_8cpp.html#a5d4ac0fa9b58c9379655db85f31d5b62',1,'TEST_CASE(&quot;Scanner for multiple combinations&quot;, &quot;[scanner][general_program]&quot;):&#160;scannerTest.cpp'],['../stmtTest_8cpp.html#ad98b6ce52f5903089df64550ecfe18b7',1,'TEST_CASE(&quot;Expression statement&quot;, &quot;[statement][expression]&quot;):&#160;stmtTest.cpp'],['../stmtTest_8cpp.html#aa9acc4134a1c5e5396b9c59cf773dec0',1,'TEST_CASE(&quot;Print statement&quot;, &quot;[statement][print]&quot;):&#160;stmtTest.cpp'],['../stmtTest_8cpp.html#a8b2f1ced0328f288869ba8bc78d7d9e1',1,'TEST_CASE(&quot;Variable statement&quot;, &quot;[statement][variable]&quot;):&#160;stmtTest.cpp'],['../stmtTest_8cpp.html#a5b6d587638c673b688d212420031e7e4',1,'TEST_CASE(&quot;Block statement&quot;, &quot;[statement][block]&quot;):&#160;stmtTest.cpp'],['../stmtTest_8cpp.html#ac502783d7677fcbd26c26d9b396e90c2',1,'TEST_CASE(&quot;If statement&quot;, &quot;[statement][if]&quot;):&#160;stmtTest.cpp'],['../stmtTest_8cpp.html#a9a744653c55992e79b05af5fc55aca5c',1,'TEST_CASE(&quot;While statement&quot;, &quot;[statement][while]&quot;):&#160;stmtTest.cpp'],['../tokenTest_8cpp.html#abe5a2cbcef035c08831819ab87efc4ca',1,'TEST_CASE(&quot;Token construction and access&quot;, &quot;[token][constructor][access]&quot;):&#160;tokenTest.cpp'],['../parserTest_8cpp.html#ae1d55c6632fe39884c96f67beedf783c',1,'TEST_CASE(&quot;Parse an unary expression&quot;, &quot;[parser][expression][unary]&quot;):&#160;parserTest.cpp'],['../tokenTypeTest_8cpp.html#add165ba64d2b2e079e9f9ee67f6b9b58',1,'TEST_CASE(&quot;toString for TokenType works&quot;, &quot;[TokenType][toString]&quot;):&#160;tokenTypeTest.cpp'],['../environmentTest_8cpp.html#abce412c1f557dadc11c76f0e6671be22',1,'TEST_CASE(&quot;Environment without enclosing&quot;, &quot;[environment]&quot;):&#160;environmentTest.cpp'],['../environmentTest_8cpp.html#a01074950e21f756a61be6fe46c80e0e9',1,'TEST_CASE(&quot;Environment with enclosing&quot;, &quot;[environment][enclosing]&quot;):&#160;environmentTest.cpp'],['../errorTest_8cpp.html#af93175627642fbb8db1d156e4cf1b477',1,'TEST_CASE(&quot;Error handling&quot;, &quot;[error]&quot;):&#160;errorTest.cpp'],['../exprTest_8cpp.html#ad2d7c266dbfb58fb80c44c8a3dd2f5ba',1,'TEST_CASE(&quot;Literal expression&quot;, &quot;[expression][literal]&quot;):&#160;exprTest.cpp'],['../exprTest_8cpp.html#a1c6dc08baf069a39f296b5b131204215',1,'TEST_CASE(&quot;Grouping expression&quot;, &quot;[expression][grouping]&quot;):&#160;exprTest.cpp'],['../exprTest_8cpp.html#af46c99fa38ede76a0411394f784c16ee',1,'TEST_CASE(&quot;Unary expression&quot;, &quot;[expression][unary]&quot;):&#160;exprTest.cpp'],['../exprTest_8cpp.html#a37072de29663c0546907647d63284a5b',1,'TEST_CASE(&quot;Binary expression&quot;, &quot;[expression][binary]&quot;):&#160;exprTest.cpp'],['../exprTest_8cpp.html#a1c43e2795a379eab78592fdf71668c8b',1,'TEST_CASE(&quot;Variable expression&quot;, &quot;[expression][variable]&quot;):&#160;exprTest.cpp'],['../exprTest_8cpp.html#a6c8337032c01ec5941cec26a4179ed96',1,'TEST_CASE(&quot;Assign expression&quot;, &quot;[expression][assign]&quot;):&#160;exprTest.cpp'],['../exprTest_8cpp.html#ace11fe8c67ee780e46dad07b414028f0',1,'TEST_CASE(&quot;Logic expression&quot;, &quot;[expression][logic]&quot;):&#160;exprTest.cpp'],['../interpreterTest_8cpp.html#ab150f85e2a5e48f1c4f8992c29f0c06a',1,'TEST_CASE(&quot;Interpreting Print of Literal Expressions&quot;, &quot;[interpreter][print][literal]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a6d59c7eaa8dc2d2c231dc8048e24e35c',1,'TEST_CASE(&quot;Interpreting Grouping Expressions&quot;, &quot;[interpreter][grouping]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a20d502dcebb9fdb1ee5a77b6e461a05f',1,'TEST_CASE(&quot;Interpreting Unary Expressions&quot;, &quot;[interpreter][unary]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a91cdf5df35d38b3a8934de548a6ca231',1,'TEST_CASE(&quot;Intrpreting Binary Expressions&quot;, &quot;[interpreter][binary]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a7d78cde49e06d2e3075c06db32f64b88',1,'TEST_CASE(&quot;Interpreting multiple print statements&quot;, &quot;[interpreter][statement][multiple]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a6d69d806ec4f8c26e812e8faeba66df8',1,'TEST_CASE(&quot;Interpreting variable assignment&quot;, &quot;[interpreter][statement][variable]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a6c6a1c7c7c4e7f448ae53d7aa8891248',1,'TEST_CASE(&quot;Interpreting logical short-circuit operators&quot;, &quot;[interpreter][statement][logical]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#a7681cf646797c6651e5ce7c2c5972057',1,'TEST_CASE(&quot;Interpreting if-else statement&quot;, &quot;[interpreter][statement][if]&quot;):&#160;interpreterTest.cpp'],['../interpreterTest_8cpp.html#ae30abe8dbd86c4cdc9bea70322460f21',1,'TEST_CASE(&quot;Interpreting While Statement&quot;, &quot;[interpreter][statement][while]&quot;):&#160;interpreterTest.cpp'],['../parserTest_8cpp.html#a315563ec8109a83640b4e06805019d4b',1,'TEST_CASE(&quot;Parse an empty program&quot;, &quot;[parser][program][empty]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#a55524814b474408c670a590165e022c9',1,'TEST_CASE(&quot;Parse a primary expression&quot;, &quot;[parser][expression][primary]&quot;):&#160;parserTest.cpp'],['../parserTest_8cpp.html#ac4d51930b2f5f7c73059f13e0d89458b',1,'TEST_CASE(&quot;Parse a factor expression&quot;, &quot;[parser][expression][factor]&quot;):&#160;parserTest.cpp']]],
  ['token_2',['Token',['../classToken.html#a52d0d3e901c899c90842edd5ff0b628e',1,'Token']]],
  ['tostring_3',['tostring',['../classToken.html#a6f1c3f5f607e9b576b4202b108f13c60',1,'Token::toString()'],['../tokenType_8hpp.html#abe360e7443f729d7d8db70d9a59eebe1',1,'toString(TokenType type):&#160;tokenType.cpp'],['../tokenType_8cpp.html#a673a82c90b34d34c368080eb52b6dacd',1,'toString(TokenType tokenType):&#160;tokenType.cpp']]]
];
